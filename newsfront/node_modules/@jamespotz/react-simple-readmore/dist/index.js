"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _helper = require("./helpers/helper");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { keys.push.apply(keys, Object.getOwnPropertySymbols(object)); } if (enumerableOnly) keys = keys.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var getDefaultStyle = function getDefaultStyle() {
  return {
    overflow: 'hidden',
    position: 'relative',
  };
};

var ReadMore = function ReadMore(_ref) {
  var minHeight = _ref.minHeight,
      displayHeight = _ref.displayHeight,
      btnText = _ref.btnText,
      btnTextShown = _ref.btnTextShown,
      timing = _ref.timing,
      timingFunction = _ref.timingFunction,
      defaultShownOnLess = _ref.defaultShownOnLess,
      btn = _ref.btn,
      btnClassName = _ref.btnClassName,
      btnStyles = _ref.btnStyles,
      onClick = _ref.onClick,
      rest = _objectWithoutProperties(_ref, ["minHeight", "displayHeight", "btnText", "btnTextShown", "timing", "timingFunction", "defaultShownOnLess", "btn", "btnClassName", "btnStyles", "onClick"]);

  var container = (0, _react.useRef)();

  var _container = (0, _react.useRef)();

  var _useState = (0, _react.useState)('noWobble'),
      _useState2 = _slicedToArray(_useState, 2),
      selectedPreset = _useState2[0],
      setSelectedPreset = _useState2[1];

  var _useState3 = (0, _react.useState)(50),
      _useState4 = _slicedToArray(_useState3, 2),
      height = _useState4[0],
      setHeight = _useState4[1];

  var _useState5 = (0, _react.useState)(50),
      _useState6 = _slicedToArray(_useState5, 2),
      beforeHeight = _useState6[0],
      setBeforeHeight = _useState6[1];

  var _useState7 = (0, _react.useState)('auto'),
      _useState8 = _slicedToArray(_useState7, 2),
      finalHeight = _useState8[0],
      setFinalHeight = _useState8[1];

  var _useState9 = (0, _react.useState)(false),
      _useState10 = _slicedToArray(_useState9, 2),
      show = _useState10[0],
      setShown = _useState10[1];

  var _useState11 = (0, _react.useState)(' ˅ '),
      _useState12 = _slicedToArray(_useState11, 2),
      btnLabel = _useState12[0],
      setBtnLabel = _useState12[1];

  var _useState13 = (0, _react.useState)(' ˄ '),
      _useState14 = _slicedToArray(_useState13, 2),
      btnLabelShown = _useState14[0],
      setBtnLabelShown = _useState14[1];

  var _useState15 = (0, _react.useState)(0),
      _useState16 = _slicedToArray(_useState15, 2),
      maxAvailableHeight = _useState16[0],
      setMaxAvailableHeight = _useState16[1];

  var _useState17 = (0, _react.useState)(false),
      _useState18 = _slicedToArray(_useState17, 2),
      showContent = _useState18[0],
      setShowContent = _useState18[1];

  (0, _react.useEffect)(function () {
    if (minHeight) {
      setHeight(minHeight);
      setBeforeHeight(minHeight);
    }

    if (displayHeight) setFinalHeight(displayHeight);
    if (btnText) setBtnLabel(btnText);
    if (btnTextShown) setBtnLabelShown(btnTextShown);
    if (_helper.preset.hasOwnProperty(rest.preset)) setSelectedPreset(rest.preset);
  }, [btnText, btnTextShown, displayHeight, minHeight, rest.preset]);
  (0, _react.useEffect)(function () {
    if (_container.current.scrollHeight === 0) return;
    if (_container.current.scrollHeight === maxAvailableHeight) return;

    if (rest.children) {
      setMaxAvailableHeight(_container.current.scrollHeight);
    }
  }, [maxAvailableHeight, rest.children]);

  var animateNow = function animateNow(fn, x, X) {
    var _preset$selectedPrese = _helper.preset[selectedPreset],
        stiffness = _preset$selectedPrese.stiffness,
        damping = _preset$selectedPrese.damping;
    (0, _helper.animate)({
      frameRate: 1000 / 60,
      x: x,
      destX: X,
      v: rest.velocity || 0,
      k: stiffness,
      b: damping,
      precision: rest.precision || 0.01,
      mass: rest.mass || 1,
      el: container.current,
      key: 'height'
    }, fn);
  };

  var showContents = function showContents() {
    setShowContent(true);
    setShown(true);
    animateNow(function () {
      setHeight(finalHeight);
      if (typeof onClick === 'function') onClick.call(null, true);
    }, minHeight, maxAvailableHeight);
  };

  var hideContents = function hideContents() {
    setShown(false);
    setShowContent(false);
    animateNow(function () {
      setHeight(beforeHeight);
      if (typeof onClick === 'function') onClick.call(null, false);
    }, maxAvailableHeight, minHeight);
  };

  var toggleHeight = function toggleHeight() {
    if (show) {
      hideContents();
      return;
    }

    showContents();
  };

  var contentHasSameHeightOrLess = function contentHasSameHeightOrLess() {
    if (!_container.current) return false;
    return maxAvailableHeight <= height;
  };

  var showChildren = function showChildren() {
    if (defaultShownOnLess && !showContent) return defaultShownOnLess;
    return rest.children;
  };

  var renderBtn = function renderBtn() {
    var shouldHide = contentHasSameHeightOrLess();

    if (btn) {
      var newBtn = _react.default.cloneElement(btn, {
        onClick: toggleHeight
      });

      return shouldHide ? null : newBtn;
    }

    return shouldHide ? null : _react.default.createElement("button", {
      onClick: toggleHeight,
      className: btnClassName,
      style: _objectSpread({}, btnStyles)
    }, show ? btnLabelShown : btnLabel);
  };

  var renderFade = function renderFade() {
    if (!rest.fade) return null;
    if (contentHasSameHeightOrLess()) return null;
    var colorStopTop = rest.colorStopTop || 'rgba(255, 255, 255, 0)';
    var colorStopBottom = rest.colorStopBottom || 'white';
    var fadeHeight = rest.fadeHeight || beforeHeight / 2;
    return _react.default.createElement("div", {
      className: "readmore--fade",
      style: {
        opacity: show ? 0 : 1,
        width: '100%',
        position: 'absolute',
        height: fadeHeight,
        bottom: 0,
        backgroundImage: "linear-gradient(to bottom, ".concat(colorStopTop, ", ").concat(colorStopBottom, ")"),
        transition: 'opacity 250ms ease-in'
      }
    });
  };

  return _react.default.createElement("div", {
    className: "readmore__wrapper",
    style: {
      position: 'relative'
    }
  }, _react.default.createElement("div", {
    className: "readmore__container",
    ref: container,
    style: _objectSpread({
      height: height
    }, getDefaultStyle())
  }, showChildren(), renderFade()), renderBtn(), _react.default.createElement("div", {
    className: "reademore__hidden_content",
    style: {
      position: 'absolute',
      top: '-9999px',
      left: '-9999px',
      width: '100%'
    },
    ref: _container
  }, rest.children));
};

ReadMore.propTypes = {
  minHeight: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  displayHeight: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  btnText: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.element]),
  btnTextShown: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.element]),
  defaultShownOnLess: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.element]),
  btn: _propTypes.default.element,
  onClick: _propTypes.default.func,
  children: _propTypes.default.node.isRequired,
  btnStyles: _propTypes.default.object,
  btnClassName: _propTypes.default.string,
  fade: _propTypes.default.bool,
  fadeHeight: _propTypes.default.number,
  colorStopBottom: _propTypes.default.string,
  colorStopTop: _propTypes.default.string,
  precision: _propTypes.default.number,
  preset: _propTypes.default.oneOf(['noWobble', 'wobbly', 'gentle', 'stiff', 'slow', 'molasses']),
  mass: _propTypes.default.number,
  velocity: _propTypes.default.number,
  stiffness: _propTypes.default.number,
  damping: _propTypes.default.number
};
var _default = ReadMore;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,