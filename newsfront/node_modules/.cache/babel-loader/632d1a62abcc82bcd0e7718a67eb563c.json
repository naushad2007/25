{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loren\\\\OneDrive\\\\\\u684C\\u9762\\\\hw8\\\\newsfront\\\\src\\\\components\\\\Navbars\\\\SearchSelect.jsx\";\nimport React, { Component } from \"react\";\nimport Select from \"react-select\";\nimport Async, { makeAsyncSelect } from \"react-select/async\"; // import { colourOptions } from \"./docs/data\";\n// const filterColors = (inputValue: string) => {\n//   return colourOptions.filter((i) =>\n//     i.label.toLowerCase().includes(inputValue.toLowerCase())\n//   );\n// };\n\nfunction pre(text) {\n  return \"<pre>\" + text.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\") + \"</pre>\";\n} //-------------------------------------------------\n\n\nfunction renderSearchResults(results) {\n  document.getElementById(\"results\").innerHTML = pre(JSON.stringify(results, null, 2));\n} //-------------------------------------------------\n\n\nfunction renderErrorMessage(message, code) {\n  if (code) document.getElementById(\"results\").innerHTML = \"<pre>Status \" + code + \": \" + message + \"</pre>\";else document.getElementById(\"results\").innerHTML = \"<pre>\" + message + \"</pre>\";\n}\n\nfunction bingAutosuggest(query, key) {\n  var endpoint = \"https://api.cognitive.microsoft.com/bing/v7.0/Suggestions\";\n  var request = new XMLHttpRequest();\n\n  try {\n    request.open(\"GET\", endpoint + \"?q=\" + encodeURIComponent(query));\n  } catch (e) {\n    renderErrorMessage(\"Bad request\");\n    return false;\n  }\n\n  request.setRequestHeader(\"Ocp-Apim-Subscription-Key\", key);\n  request.addEventListener(\"load\", function () {\n    if (this.status === 200) {\n      renderSearchResults(JSON.parse(this.responseText));\n    }\n  });\n  request.addEventListener(\"error\", function () {\n    renderErrorMessage(\"Network error\");\n  });\n  request.addEventListener(\"abort\", function () {\n    renderErrorMessage(\"Request aborted\");\n  });\n  request.send();\n  return false;\n}\n\nconst promiseOptions = inputValue => new Promise(resolve => {\n  // setTimeout(() => {\n  resolve(bingAutosuggest(inputValue, \"fd0ef54849aa44c890942a2eb8866194\")); // }, 1000);\n});\n\nexport default class SearchSelect extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(AsyncSelect, {\n      cacheOptions: true,\n      defaultOptions: true,\n      loadOptions: promiseOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/loren/OneDrive/桌面/hw8/newsfront/src/components/Navbars/SearchSelect.jsx"],"names":["React","Component","Select","Async","makeAsyncSelect","pre","text","replace","renderSearchResults","results","document","getElementById","innerHTML","JSON","stringify","renderErrorMessage","message","code","bingAutosuggest","query","key","endpoint","request","XMLHttpRequest","open","encodeURIComponent","e","setRequestHeader","addEventListener","status","parse","responseText","send","promiseOptions","inputValue","Promise","resolve","SearchSelect","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,IAAgBC,eAAhB,QAAuC,oBAAvC,C,CAA6D;AAE7D;AACA;AACA;AACA;AACA;;AACA,SAASC,GAAT,CAAaC,IAAb,EAAmB;AACjB,SAAO,UAAUA,IAAI,CAACC,OAAL,CAAa,IAAb,EAAmB,OAAnB,EAA4BA,OAA5B,CAAoC,IAApC,EAA0C,MAA1C,CAAV,GAA8D,QAArE;AACD,C,CACD;;;AAEA,SAASC,mBAAT,CAA6BC,OAA7B,EAAsC;AACpCC,EAAAA,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,SAAnC,GAA+CP,GAAG,CAChDQ,IAAI,CAACC,SAAL,CAAeL,OAAf,EAAwB,IAAxB,EAA8B,CAA9B,CADgD,CAAlD;AAGD,C,CACD;;;AAEA,SAASM,kBAAT,CAA4BC,OAA5B,EAAqCC,IAArC,EAA2C;AACzC,MAAIA,IAAJ,EACEP,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,SAAnC,GACE,iBAAiBK,IAAjB,GAAwB,IAAxB,GAA+BD,OAA/B,GAAyC,QAD3C,CADF,KAIEN,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,SAAnC,GAA+C,UAAUI,OAAV,GAAoB,QAAnE;AACH;;AACD,SAASE,eAAT,CAAyBC,KAAzB,EAAgCC,GAAhC,EAAqC;AACnC,MAAIC,QAAQ,GAAG,2DAAf;AAEA,MAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd;;AAEA,MAAI;AACFD,IAAAA,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoBH,QAAQ,GAAG,KAAX,GAAmBI,kBAAkB,CAACN,KAAD,CAAzD;AACD,GAFD,CAEE,OAAOO,CAAP,EAAU;AACVX,IAAAA,kBAAkB,CAAC,aAAD,CAAlB;AACA,WAAO,KAAP;AACD;;AACDO,EAAAA,OAAO,CAACK,gBAAR,CAAyB,2BAAzB,EAAsDP,GAAtD;AACAE,EAAAA,OAAO,CAACM,gBAAR,CAAyB,MAAzB,EAAiC,YAAY;AAC3C,QAAI,KAAKC,MAAL,KAAgB,GAApB,EAAyB;AACvBrB,MAAAA,mBAAmB,CAACK,IAAI,CAACiB,KAAL,CAAW,KAAKC,YAAhB,CAAD,CAAnB;AACD;AACF,GAJD;AAKAT,EAAAA,OAAO,CAACM,gBAAR,CAAyB,OAAzB,EAAkC,YAAY;AAC5Cb,IAAAA,kBAAkB,CAAC,eAAD,CAAlB;AACD,GAFD;AAIAO,EAAAA,OAAO,CAACM,gBAAR,CAAyB,OAAzB,EAAkC,YAAY;AAC5Cb,IAAAA,kBAAkB,CAAC,iBAAD,CAAlB;AACD,GAFD;AAGAO,EAAAA,OAAO,CAACU,IAAR;AACA,SAAO,KAAP;AACD;;AACD,MAAMC,cAAc,GAAIC,UAAD,IACrB,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACvB;AACAA,EAAAA,OAAO,CAAClB,eAAe,CAACgB,UAAD,EAAa,kCAAb,CAAhB,CAAP,CAFuB,CAGvB;AACD,CAJD,CADF;;AAOA,eAAe,MAAMG,YAAN,SAA2BpC,SAA3B,CAAqC;AAClDqC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,WAAD;AAAa,MAAA,YAAY,MAAzB;AAA0B,MAAA,cAAc,MAAxC;AAAyC,MAAA,WAAW,EAAEL,cAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AALiD","sourcesContent":["import React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport Async, { makeAsyncSelect } from \"react-select/async\"; // import { colourOptions } from \"./docs/data\";\r\n\r\n// const filterColors = (inputValue: string) => {\r\n//   return colourOptions.filter((i) =>\r\n//     i.label.toLowerCase().includes(inputValue.toLowerCase())\r\n//   );\r\n// };\r\nfunction pre(text) {\r\n  return \"<pre>\" + text.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\") + \"</pre>\";\r\n}\r\n//-------------------------------------------------\r\n\r\nfunction renderSearchResults(results) {\r\n  document.getElementById(\"results\").innerHTML = pre(\r\n    JSON.stringify(results, null, 2)\r\n  );\r\n}\r\n//-------------------------------------------------\r\n\r\nfunction renderErrorMessage(message, code) {\r\n  if (code)\r\n    document.getElementById(\"results\").innerHTML =\r\n      \"<pre>Status \" + code + \": \" + message + \"</pre>\";\r\n  else\r\n    document.getElementById(\"results\").innerHTML = \"<pre>\" + message + \"</pre>\";\r\n}\r\nfunction bingAutosuggest(query, key) {\r\n  var endpoint = \"https://api.cognitive.microsoft.com/bing/v7.0/Suggestions\";\r\n\r\n  var request = new XMLHttpRequest();\r\n\r\n  try {\r\n    request.open(\"GET\", endpoint + \"?q=\" + encodeURIComponent(query));\r\n  } catch (e) {\r\n    renderErrorMessage(\"Bad request\");\r\n    return false;\r\n  }\r\n  request.setRequestHeader(\"Ocp-Apim-Subscription-Key\", key);\r\n  request.addEventListener(\"load\", function () {\r\n    if (this.status === 200) {\r\n      renderSearchResults(JSON.parse(this.responseText));\r\n    }\r\n  });\r\n  request.addEventListener(\"error\", function () {\r\n    renderErrorMessage(\"Network error\");\r\n  });\r\n\r\n  request.addEventListener(\"abort\", function () {\r\n    renderErrorMessage(\"Request aborted\");\r\n  });\r\n  request.send();\r\n  return false;\r\n}\r\nconst promiseOptions = (inputValue) =>\r\n  new Promise((resolve) => {\r\n    // setTimeout(() => {\r\n    resolve(bingAutosuggest(inputValue, \"fd0ef54849aa44c890942a2eb8866194\"));\r\n    // }, 1000);\r\n  });\r\n\r\nexport default class SearchSelect extends Component {\r\n  render() {\r\n    return (\r\n      <AsyncSelect cacheOptions defaultOptions loadOptions={promiseOptions} />\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}