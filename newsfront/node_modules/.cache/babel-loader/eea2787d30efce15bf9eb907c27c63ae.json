{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loren\\\\OneDrive\\\\\\u684C\\u9762\\\\hw8\\\\newsfront\\\\src\\\\components\\\\details\\\\Comment.jsx\";\nimport React, { Component } from \"react\";\nimport commentBox from \"commentbox.io\"; // Comment-Project-ID: 5746809972457472-proj\n\nconst commentId = \"5746809972457472-proj\";\nexport default class Comment extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.removeCommentBox = commentBox(\"my-project-id\", {\n      className: \"commentbox\",\n      // the class of divs to look for\n      defaultBoxId: `${this.props.commentId}`,\n      // the default ID to associate to the div\n      tlcParam: \"tlc\",\n\n      // used for identifying links to comments on your page\n\n      /**\r\n       * Creates a unique URL to each box on your page.\r\n       *\r\n       * @param {string} boxId\r\n       * @param {Location} pageLocation - a copy of the current window.location\r\n       * @returns {string}\r\n       */\n      createBoxUrl(boxId, pageLocation) {\n        pageLocation.search = \"\"; // removes query string!\n\n        pageLocation.hash = boxId; // creates link to this specific Comment Box on your page\n\n        return pageLocation.href; // return url string\n      },\n\n      /**\r\n       * Fires once the plugin loads its comments.\r\n       * May fire multiple times in its lifetime.\r\n       *\r\n       * @param {number} count\r\n       */\n      onCommentCount(count) {}\n\n    });\n  }\n\n  componentWillUnmount() {\n    this.removeCommentBox();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"commentbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/loren/OneDrive/桌面/hw8/newsfront/src/components/details/Comment.jsx"],"names":["React","Component","commentBox","commentId","Comment","constructor","props","componentDidMount","removeCommentBox","className","defaultBoxId","tlcParam","createBoxUrl","boxId","pageLocation","search","hash","href","onCommentCount","count","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,eAAvB,C,CAEA;;AACA,MAAMC,SAAS,GAAG,uBAAlB;AACA,eAAe,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAC7CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,gBAAL,GAAwBN,UAAU,CAAC,eAAD,EAAkB;AAClDO,MAAAA,SAAS,EAAE,YADuC;AACzB;AACzBC,MAAAA,YAAY,EAAG,GAAE,KAAKJ,KAAL,CAAWH,SAAU,EAFY;AAET;AACzCQ,MAAAA,QAAQ,EAAE,KAHwC;;AAGjC;;AACjB;;;;;;;AAOAC,MAAAA,YAAY,CAACC,KAAD,EAAQC,YAAR,EAAsB;AAChCA,QAAAA,YAAY,CAACC,MAAb,GAAsB,EAAtB,CADgC,CACN;;AAC1BD,QAAAA,YAAY,CAACE,IAAb,GAAoBH,KAApB,CAFgC,CAEL;;AAC3B,eAAOC,YAAY,CAACG,IAApB,CAHgC,CAGN;AAC3B,OAfiD;;AAgBlD;;;;;;AAMAC,MAAAA,cAAc,CAACC,KAAD,EAAQ,CAAE;;AAtB0B,KAAlB,CAAlC;AAwBD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,SAAKZ,gBAAL;AACD;;AAEDa,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAtC4C","sourcesContent":["import React, { Component } from \"react\";\r\nimport commentBox from \"commentbox.io\";\r\n\r\n// Comment-Project-ID: 5746809972457472-proj\r\nconst commentId = \"5746809972457472-proj\";\r\nexport default class Comment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.removeCommentBox = commentBox(\"my-project-id\", {\r\n      className: \"commentbox\", // the class of divs to look for\r\n      defaultBoxId: `${this.props.commentId}`, // the default ID to associate to the div\r\n      tlcParam: \"tlc\", // used for identifying links to comments on your page\r\n      /**\r\n       * Creates a unique URL to each box on your page.\r\n       *\r\n       * @param {string} boxId\r\n       * @param {Location} pageLocation - a copy of the current window.location\r\n       * @returns {string}\r\n       */\r\n      createBoxUrl(boxId, pageLocation) {\r\n        pageLocation.search = \"\"; // removes query string!\r\n        pageLocation.hash = boxId; // creates link to this specific Comment Box on your page\r\n        return pageLocation.href; // return url string\r\n      },\r\n      /**\r\n       * Fires once the plugin loads its comments.\r\n       * May fire multiple times in its lifetime.\r\n       *\r\n       * @param {number} count\r\n       */\r\n      onCommentCount(count) {},\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeCommentBox();\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"commentbox\" />;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}