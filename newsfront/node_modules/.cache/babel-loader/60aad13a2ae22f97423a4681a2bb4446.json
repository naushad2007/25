{"ast":null,"code":"var _jsxFileName = \"/Users/niuxiaoming/Downloads/hw8/hw8/newsfront/src/components/Navbars/SearchSelect.jsx\";\nimport React, { Component } from \"react\";\nimport history from \"history\";\nimport AsyncSelect from \"react-select/async\";\nimport axios from \"axios\";\nexport default class WithPromises extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.promiseOptions = inputValue => {\n      return axios.get(`https://api.cognitive.microsoft.com/bing/v7.0/Suggestions?q=${encodeURIComponent(inputValue)}`, {\n        headers: {\n          \"Ocp-Apim-Subscription-Key\": \"fd0ef54849aa44c890942a2eb8866194\"\n        }\n      }).then(res => {\n        const resultsRaw = res.data.suggestionGroups[0].searchSuggestions;\n        const results = resultsRaw.map(result => ({\n          value: result.displayText,\n          label: result.displayText\n        }));\n        console.log(results);\n        return results;\n      }).catch(err => console.log(err));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: searchStyle,\n      className: \"mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AsyncSelect, {\n      placeholder: \"Enter keyword ..\",\n      onChange: opt => // console.log(opt.label + history.pushState(\"/search\"))\n      window.location.assign(`/search?q=${opt.label}`),\n      loadOptions: this.promiseOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }), \";\");\n  }\n\n}\nconst searchStyle = {\n  width: \"300px\"\n};","map":{"version":3,"sources":["/Users/niuxiaoming/Downloads/hw8/hw8/newsfront/src/components/Navbars/SearchSelect.jsx"],"names":["React","Component","history","AsyncSelect","axios","WithPromises","promiseOptions","inputValue","get","encodeURIComponent","headers","then","res","resultsRaw","data","suggestionGroups","searchSuggestions","results","map","result","value","displayText","label","console","log","catch","err","render","searchStyle","opt","window","location","assign","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAClDK,cADkD,GAChCC,UAAD,IAAgB;AAC/B,aAAOH,KAAK,CACTI,GADI,CAEF,+DAA8DC,kBAAkB,CAC/EF,UAD+E,CAE/E,EAJC,EAKH;AACEG,QAAAA,OAAO,EAAE;AACP,uCAA6B;AADtB;AADX,OALG,EAWJC,IAXI,CAWEC,GAAD,IAAS;AACb,cAAMC,UAAU,GAAGD,GAAG,CAACE,IAAJ,CAASC,gBAAT,CAA0B,CAA1B,EAA6BC,iBAAhD;AACA,cAAMC,OAAO,GAAGJ,UAAU,CAACK,GAAX,CAAgBC,MAAD,KAAa;AAC1CC,UAAAA,KAAK,EAAED,MAAM,CAACE,WAD4B;AAE1CC,UAAAA,KAAK,EAAEH,MAAM,CAACE;AAF4B,SAAb,CAAf,CAAhB;AAIAE,QAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACA,eAAOA,OAAP;AACD,OAnBI,EAoBJQ,KApBI,CAoBGC,GAAD,IAASH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CApBX,CAAP;AAqBD,KAvBiD;AAAA;;AAyBlDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,KAAK,EAAEC,WAAZ;AAAyB,MAAA,SAAS,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AACE,MAAA,WAAW,EAAC,kBADd;AAEE,MAAA,QAAQ,EAAGC,GAAD,IACR;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAwB,aAAYH,GAAG,CAACP,KAAM,EAA9C,CAJJ;AAME,MAAA,WAAW,EAAE,KAAKhB,cANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,MADF;AAaD;;AAvCiD;AA0CpD,MAAMsB,WAAW,GAAG;AAClBK,EAAAA,KAAK,EAAE;AADW,CAApB","sourcesContent":["import React, { Component } from \"react\";\r\nimport history from \"history\";\r\nimport AsyncSelect from \"react-select/async\";\r\nimport axios from \"axios\";\r\n\r\nexport default class WithPromises extends Component {\r\n  promiseOptions = (inputValue) => {\r\n    return axios\r\n      .get(\r\n        `https://api.cognitive.microsoft.com/bing/v7.0/Suggestions?q=${encodeURIComponent(\r\n          inputValue\r\n        )}`,\r\n        {\r\n          headers: {\r\n            \"Ocp-Apim-Subscription-Key\": \"fd0ef54849aa44c890942a2eb8866194\",\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        const resultsRaw = res.data.suggestionGroups[0].searchSuggestions;\r\n        const results = resultsRaw.map((result) => ({\r\n          value: result.displayText,\r\n          label: result.displayText,\r\n        }));\r\n        console.log(results);\r\n        return results;\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={searchStyle} className=\"mt-4\">\r\n        <AsyncSelect\r\n          placeholder=\"Enter keyword ..\"\r\n          onChange={(opt) =>\r\n            // console.log(opt.label + history.pushState(\"/search\"))\r\n            window.location.assign(`/search?q=${opt.label}`)\r\n          }\r\n          loadOptions={this.promiseOptions}\r\n        />\r\n        ;\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst searchStyle = {\r\n  width: \"300px\",\r\n};\r\n"]},"metadata":{},"sourceType":"module"}