{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loren\\\\OneDrive\\\\\\u684C\\u9762\\\\hw8\\\\newsfront\\\\src\\\\components\\\\details\\\\readMore\\\\ReadMore.jsx\";\nimport React, { Component } from \"react\";\nimport \"./read-more.css\";\nconst ELLIPSES = \"…\";\nconst SHOW_LESS_TEXT = \"Show Less\";\nconst SHOW_MORE_TEXT = \"Read More\";\nexport default class ReadMore extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingAll: false\n    };\n\n    this.toggleReadMore = () => {\n      this.setState({\n        showingAll: !this.state.showingAll\n      });\n    };\n\n    this._getReadMoreParts = ({\n      text,\n      numberOfLines,\n      readMoreCharacterLimit\n    }) => {\n      let teaserText;\n      let remainingText;\n      let remainingWordsArray = [];\n\n      if (text) {\n        const teaserWordsArray = text.split(\" \");\n\n        while (teaserWordsArray.join(\" \").length > readMoreCharacterLimit) {\n          remainingWordsArray.unshift(teaserWordsArray.pop());\n        }\n\n        teaserText = teaserWordsArray.join(\" \");\n\n        if (remainingWordsArray.length > 0) {\n          remainingText = remainingWordsArray.join(\" \");\n        }\n      }\n\n      return {\n        teaserText,\n        remainingText\n      };\n    };\n\n    this.getText = ({\n      showingAll,\n      text,\n      readMoreCharacterLimit,\n      numberOfLines\n    }) => {\n      let {\n        teaserText,\n        remainingText\n      } = this._getReadMoreParts({\n        text,\n        numberOfLines,\n        readMoreCharacterLimit\n      });\n\n      if (!showingAll && text.length > readMoreCharacterLimit) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }\n        }, teaserText.replace(/\\s*$/, \"\"), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"read-more__text--remaining read-more__text--hide\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }\n        }, remainingText), ELLIPSES);\n      }\n\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      }, teaserText, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"read-more__text--remaining read-more__text--show\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, remainingText));\n    };\n\n    this.getActionButton = ({\n      showingAll,\n      showLessButton\n    }) => {\n      if (showingAll && !showLessButton) {\n        return;\n      }\n\n      let buttonText = showingAll ? SHOW_LESS_TEXT : SHOW_MORE_TEXT;\n      return /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.toggleReadMore,\n        className: \"read-more__button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }\n      }, buttonText);\n    };\n  }\n\n  componentDidMount() {\n    this.props.onContentChange();\n  }\n\n  render() {\n    let {\n      text,\n      readMoreCharacterLimit,\n      showLessButton,\n      onContentChange,\n      numberOfLines,\n      lineHeight\n    } = this.props;\n    console.log(numberOfLines, lineHeight, numberOfLines * lineHeight);\n    let maxHeight = numberOfLines * lineHeight;\n    let style = {\n      lineHeight,\n      maxHeight: `${maxHeight}em`\n    };\n    let {\n      showingAll\n    } = this.state;\n    let textToDisplay = this.getText({\n      showingAll,\n      text,\n      readMoreCharacterLimit,\n      numberOfLines\n    });\n    let actionButton = this.getActionButton({\n      showingAll,\n      showLessButton\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"read-more\",\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }, textToDisplay, \" \", actionButton);\n  }\n\n}\nReadMore.defaultProps = {\n  numberOfLines: 2,\n  lineHeight: 1,\n  readMoreCharacterLimit: 100,\n  showLessButton: false\n};","map":{"version":3,"sources":["C:/Users/loren/OneDrive/桌面/hw8/newsfront/src/components/details/readMore/ReadMore.jsx"],"names":["React","Component","ELLIPSES","SHOW_LESS_TEXT","SHOW_MORE_TEXT","ReadMore","state","showingAll","toggleReadMore","setState","_getReadMoreParts","text","numberOfLines","readMoreCharacterLimit","teaserText","remainingText","remainingWordsArray","teaserWordsArray","split","join","length","unshift","pop","getText","replace","getActionButton","showLessButton","buttonText","componentDidMount","props","onContentChange","render","lineHeight","console","log","maxHeight","style","textToDisplay","actionButton","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./read-more.css\";\r\n\r\nconst ELLIPSES = \"…\";\r\nconst SHOW_LESS_TEXT = \"Show Less\";\r\nconst SHOW_MORE_TEXT = \"Read More\";\r\n\r\nexport default class ReadMore extends Component {\r\n  static defaultProps = {\r\n    numberOfLines: 2,\r\n    lineHeight: 1,\r\n    readMoreCharacterLimit: 100,\r\n    showLessButton: false,\r\n  };\r\n\r\n  state = {\r\n    showingAll: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.onContentChange();\r\n  }\r\n\r\n  toggleReadMore = () => {\r\n    this.setState({\r\n      showingAll: !this.state.showingAll,\r\n    });\r\n  };\r\n\r\n  _getReadMoreParts = ({ text, numberOfLines, readMoreCharacterLimit }) => {\r\n    let teaserText;\r\n    let remainingText;\r\n    let remainingWordsArray = [];\r\n\r\n    if (text) {\r\n      const teaserWordsArray = text.split(\" \");\r\n\r\n      while (teaserWordsArray.join(\" \").length > readMoreCharacterLimit) {\r\n        remainingWordsArray.unshift(teaserWordsArray.pop());\r\n      }\r\n\r\n      teaserText = teaserWordsArray.join(\" \");\r\n\r\n      if (remainingWordsArray.length > 0) {\r\n        remainingText = remainingWordsArray.join(\" \");\r\n      }\r\n    }\r\n\r\n    return {\r\n      teaserText,\r\n      remainingText,\r\n    };\r\n  };\r\n\r\n  getText = ({ showingAll, text, readMoreCharacterLimit, numberOfLines }) => {\r\n    let { teaserText, remainingText } = this._getReadMoreParts({\r\n      text,\r\n      numberOfLines,\r\n      readMoreCharacterLimit,\r\n    });\r\n\r\n    if (!showingAll && text.length > readMoreCharacterLimit) {\r\n      return (\r\n        <span>\r\n          {teaserText.replace(/\\s*$/, \"\")}\r\n          <span className=\"read-more__text--remaining read-more__text--hide\">\r\n            {remainingText}\r\n          </span>\r\n          {ELLIPSES}\r\n        </span>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <span>\r\n        {teaserText}\r\n        <span className=\"read-more__text--remaining read-more__text--show\">\r\n          {remainingText}\r\n        </span>\r\n      </span>\r\n    );\r\n  };\r\n\r\n  getActionButton = ({ showingAll, showLessButton }) => {\r\n    if (showingAll && !showLessButton) {\r\n      return;\r\n    }\r\n\r\n    let buttonText = showingAll ? SHOW_LESS_TEXT : SHOW_MORE_TEXT;\r\n\r\n    return (\r\n      <button onClick={this.toggleReadMore} className=\"read-more__button\">\r\n        {buttonText}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      text,\r\n      readMoreCharacterLimit,\r\n      showLessButton,\r\n      onContentChange,\r\n      numberOfLines,\r\n      lineHeight,\r\n    } = this.props;\r\n\r\n    console.log(numberOfLines, lineHeight, numberOfLines * lineHeight);\r\n    let maxHeight = numberOfLines * lineHeight;\r\n    let style = {\r\n      lineHeight,\r\n      maxHeight: `${maxHeight}em`,\r\n    };\r\n    let { showingAll } = this.state;\r\n    let textToDisplay = this.getText({\r\n      showingAll,\r\n      text,\r\n      readMoreCharacterLimit,\r\n      numberOfLines,\r\n    });\r\n    let actionButton = this.getActionButton({ showingAll, showLessButton });\r\n\r\n    return (\r\n      <div className=\"read-more\" style={style}>\r\n        {textToDisplay} {actionButton}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}