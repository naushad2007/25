{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loren\\\\OneDrive\\\\\\u684C\\u9762\\\\hw8\\\\newsfront\\\\src\\\\components\\\\Navbars\\\\SearchSelect.jsx\";\nimport React, { Component } from \"react\";\nimport AsyncSelect from \"react-select/async\";\n\nfunction bingAutosuggest(query, key) {\n  var endpoint = \"https://api.cognitive.microsoft.com/bing/v7.0/Suggestions\";\n  var request = new XMLHttpRequest();\n\n  try {\n    request.open(\"GET\", endpoint + \"?q=\" + encodeURIComponent(query));\n  } catch (e) {\n    console.log(\"error\");\n    return false;\n  }\n\n  request.setRequestHeader(\"Ocp-Apim-Subscription-Key\", key);\n  request.addEventListener(\"load\", function () {\n    if (this.status === 200) {\n      const data = JSON.parse(this.responseText);\n      const resultsRaw = data.suggestionGroups[0].searchSuggestions;\n      const results = resultsRaw.map(result => ({\n        label: result.displayText,\n        value: result.displayText\n      }));\n      console.log(results);\n      return results;\n    }\n  });\n  request.addEventListener(\"error\", function () {\n    console.log(\"error\");\n  });\n  request.addEventListener(\"abort\", function () {\n    console.log(\"error\");\n  });\n  request.send();\n  return false;\n} // async function promiseOptions(inputValue) {\n//       const response\n//   }\n\n\nexport default class WithPromises extends Component {\n  componentDidMount() {\n    promiseOptions = inputValue => new Promise(resolve => {\n      resolve(bingAutosuggest(inputValue, \"fd0ef54849aa44c890942a2eb8866194\"));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AsyncSelect, {\n      loadOptions: this.promiseOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 12\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/loren/OneDrive/桌面/hw8/newsfront/src/components/Navbars/SearchSelect.jsx"],"names":["React","Component","AsyncSelect","bingAutosuggest","query","key","endpoint","request","XMLHttpRequest","open","encodeURIComponent","e","console","log","setRequestHeader","addEventListener","status","data","JSON","parse","responseText","resultsRaw","suggestionGroups","searchSuggestions","results","map","result","label","displayText","value","send","WithPromises","componentDidMount","promiseOptions","inputValue","Promise","resolve","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,WAAP,MAAwB,oBAAxB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,GAAhC,EAAqC;AACnC,MAAIC,QAAQ,GAAG,2DAAf;AAEA,MAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd;;AAEA,MAAI;AACFD,IAAAA,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoBH,QAAQ,GAAG,KAAX,GAAmBI,kBAAkB,CAACN,KAAD,CAAzD;AACD,GAFD,CAEE,OAAOO,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,WAAO,KAAP;AACD;;AACDN,EAAAA,OAAO,CAACO,gBAAR,CAAyB,2BAAzB,EAAsDT,GAAtD;AACAE,EAAAA,OAAO,CAACQ,gBAAR,CAAyB,MAAzB,EAAiC,YAAY;AAC3C,QAAI,KAAKC,MAAL,KAAgB,GAApB,EAAyB;AACvB,YAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKC,YAAhB,CAAb;AACA,YAAMC,UAAU,GAAGJ,IAAI,CAACK,gBAAL,CAAsB,CAAtB,EAAyBC,iBAA5C;AACA,YAAMC,OAAO,GAAGH,UAAU,CAACI,GAAX,CAAgBC,MAAD,KAAa;AAC1CC,QAAAA,KAAK,EAAED,MAAM,CAACE,WAD4B;AAE1CC,QAAAA,KAAK,EAAEH,MAAM,CAACE;AAF4B,OAAb,CAAf,CAAhB;AAIAhB,MAAAA,OAAO,CAACC,GAAR,CAAYW,OAAZ;AACA,aAAOA,OAAP;AACD;AACF,GAXD;AAYAjB,EAAAA,OAAO,CAACQ,gBAAR,CAAyB,OAAzB,EAAkC,YAAY;AAC5CH,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,GAFD;AAIAN,EAAAA,OAAO,CAACQ,gBAAR,CAAyB,OAAzB,EAAkC,YAAY;AAC5CH,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,GAFD;AAGAN,EAAAA,OAAO,CAACuB,IAAR;AACA,SAAO,KAAP;AACD,C,CAED;AACA;AACA;;;AAEA,eAAe,MAAMC,YAAN,SAA2B9B,SAA3B,CAAqC;AAClD+B,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,cAAc,GAAIC,UAAD,IACf,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACvBA,MAAAA,OAAO,CACLjC,eAAe,CAAC+B,UAAD,EAAa,kCAAb,CADV,CAAP;AAGD,KAJD,CADF;AAMD;;AAEDG,EAAAA,MAAM,GAAG;AACP,wBAAO,oBAAC,WAAD;AAAa,MAAA,WAAW,EAAE,KAAKJ,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAZiD","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport AsyncSelect from \"react-select/async\";\r\n\r\nfunction bingAutosuggest(query, key) {\r\n  var endpoint = \"https://api.cognitive.microsoft.com/bing/v7.0/Suggestions\";\r\n\r\n  var request = new XMLHttpRequest();\r\n\r\n  try {\r\n    request.open(\"GET\", endpoint + \"?q=\" + encodeURIComponent(query));\r\n  } catch (e) {\r\n    console.log(\"error\");\r\n    return false;\r\n  }\r\n  request.setRequestHeader(\"Ocp-Apim-Subscription-Key\", key);\r\n  request.addEventListener(\"load\", function () {\r\n    if (this.status === 200) {\r\n      const data = JSON.parse(this.responseText);\r\n      const resultsRaw = data.suggestionGroups[0].searchSuggestions;\r\n      const results = resultsRaw.map((result) => ({\r\n        label: result.displayText,\r\n        value: result.displayText,\r\n      }));\r\n      console.log(results);\r\n      return results;\r\n    }\r\n  });\r\n  request.addEventListener(\"error\", function () {\r\n    console.log(\"error\");\r\n  });\r\n\r\n  request.addEventListener(\"abort\", function () {\r\n    console.log(\"error\");\r\n  });\r\n  request.send();\r\n  return false;\r\n}\r\n\r\n// async function promiseOptions(inputValue) {\r\n//       const response\r\n//   }\r\n\r\nexport default class WithPromises extends Component {\r\n  componentDidMount() {\r\n    promiseOptions = (inputValue) =>\r\n      new Promise((resolve) => {\r\n        resolve(\r\n          bingAutosuggest(inputValue, \"fd0ef54849aa44c890942a2eb8866194\")\r\n        );\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return <AsyncSelect loadOptions={this.promiseOptions} />;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}